<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Software Quotes</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
  <link rel="stylesheet" href="../public/style/tailwind.css" />
  <script src="https://unpkg.com/htmx.org@1.8.5"></script>
  <style>
    .tab-border {
      border-bottom-width: 2px;
      border-bottom-color: #8a8888;
    }

    .tab-active {
      border-bottom-width: 3px;
      border-bottom-color: #7e22ce;
    }

    .quote-container {
      border: 2px solid #ffeb3b;
      border-radius: 8px;
      padding: 16px;
      position: relative;
      background-color: #ffffff;
      /* box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); */
      margin-bottom: 16px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .quote-content {
      flex-grow: 1;
      margin-right: 16px;
    }

    .quote-actions {
      display: flex;
      gap: 8px;
    }

    .quote-actions button {
      background: none;
      border: none;
      cursor: pointer;
    }

    .quote-actions button:hover {
      color: #7e22ce;
    }

    .quote-actions svg {
      width: 24px;
      height: 24px;
      fill: #606060;
    }

    .quote-author {
      position: absolute;
      bottom: 8px;
      right: 12px;
      background-color: #1e40af;
      color: #ffffff;
      padding: 4px 8px;
      border-radius: 4px;
    }
  </style>
</head>
<body id="body">
  <div class="container mx-auto flex flex-col items-center justify-center bg-gray-100">
    <div class="flex items-center mb-4">
      <!-- <h1 class="text-2xl font-bold mb-8 mt-6">My Quotes</h1> -->
      <!-- <div class="flex-grow border-t border-gray-200 ml-4"></div> -->
    </div>
    <div class="bg-white p-6 rounded-lg shadow-md w-full max-w-5xl">
      <div class="flex space-x-4">
        <a id="added-quotes-tab" class="tab tab-border btn px-4 py-2 m-auto hover:text-purple-700 cursor-pointer"
          onclick="fetchAllQuotes('<%= user.id %>')">
          Added Quotes
        </a>
        <a id="liked-quotes-tab" class="tab tab-border btn px-4 py-2 m-auto hover:text-purple-700 cursor-pointer"
          onclick="fetchLikedQuotes('<%= user.id %>')">
          Liked Quotes
        </a>
        <a id="disliked-quotes-tab" class="tab tab-border btn px-4 py-2 m-auto hover:text-purple-700 cursor-pointer"
          onclick="fetchDislikedQuotes('<%= user.id %>')">
          Disliked Quotes
        </a>
      </div>

      <div class="container mx-auto p-4 h-[calc(100vh-4rem)] overflow-y-auto ">
        <div id="quote-list" class="mt-4 container mx-auto p-4 ">
          <!-- Quotes will be dynamically loaded here -->
        </div>
        <div class="m-32"></div>
      </div>
    </div>
  </div>
  <script>

    function fetchAllQuotes(userId) {
      fetch(`/myquotes/users/${userId}/quotes`)
        .then((response) => response.json())
        .then((data) => {
          const quoteList = document.getElementById("quote-list");
          const addedQuotesTab = document.getElementById("added-quotes-tab");

          quoteList.innerHTML = "";

          addedQuotesTab.innerHTML = `Added Quotes <span class="bg-purple-200 text-purple-700 rounded-full px-2">${data.length}</span>`;

          if (data.length > 0) {
            data.forEach((quote) => {
              const quoteElement = document.createElement("div");
              quoteElement.classList.add("quote-container");
              quoteElement.innerHTML = `
                <div class="border-2 border-gray-600 mt-3 rounded-md p-4 relative bg-white shadow-md">
                    <p class="mb-4 text-gray-800">${quote.quote}</p>
                  <div class="absolute bottom-2 right-3 bg-blue-600 text-white px-2 py-1 rounded-md">
                    - ${quote.author}
                  </div>
                  <div class="quote-actions">
                    <button hx-get="/deleteQuote/${ quote._id }" hx-target="#body" hx-swap="innerHTML">
                        <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#606060">
                            <path d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z"/>
                        </svg>
                    </button>
                    <button hx-get="/editQuoteForm/${ quote._id }" hx-target="#body" hx-swap="innerHTML">
                      <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#d32f2f"><path d="M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z"/></svg>
                    </button>
                  </div>
                </div>
              `;
              quoteList.appendChild(quoteElement);
            });
          } else {
            quoteList.innerHTML = "<p>No quotes found.</p>";
          }
        })
        .catch((error) => {
          console.error("Error fetching quotes:", error);
        });
    }
    fetchAllQuotes("<%= user.id %>");

    function fetchDislikedQuotes(userId) {
      fetch(`/myquotes/users/${userId}/unfavourite-quotes`)
        .then((response) => response.json())
        .then((data) => {
          const quoteList = document.getElementById("quote-list");
          const dislikedQuoteTab = document.getElementById(
            "disliked-quotes-tab"
          );

          quoteList.innerHTML = "";

          dislikedQuoteTab.innerHTML = `Disliked Quotes <span class="bg-purple-200 text-purple-700 rounded-full px-2">${data.length}</span>`;

          if (data.length > 0) {
            data.forEach((quote) => {
              const quoteElement = document.createElement("div");
              quoteElement.classList.add("quote-container");
              quoteElement.innerHTML = `
                <div class="border-2 border-gray-600 mt-3 rounded-md p-4 relative bg-white shadow-md">
                    <p class="mb-4 text-gray-800">${quote.quote}</p>
                  <div class="absolute bottom-2 right-3 bg-blue-600 text-white px-2 py-1 rounded-md">
                    - ${quote.author}
                  </div>
                </div>
              `;
              quoteList.appendChild(quoteElement);
            });
          } else {
            quoteList.innerHTML = "<p>No quotes found.</p>";
          }
        })
        .catch((error) => {
          console.error("Error fetching quotes:", error);
        });
    }

    function fetchLikedQuotes(userId) {
      fetch(`/myquotes/users/${userId}/favourite-quotes`)
        .then((response) => response.json())
        .then((data) => {
          const quoteList = document.getElementById("quote-list");
          const likedQuoteTab = document.getElementById("liked-quotes-tab");

          quoteList.innerHTML = "";

          likedQuoteTab.innerHTML = `Liked Quotes <span class="bg-purple-200 text-purple-700 rounded-full px-2">${data.length}</span>`;

          if (data.length > 0) {
            data.forEach((quote) => {
              const quoteElement = document.createElement("div");
              quoteElement.classList.add("quote-container");
              quoteElement.innerHTML = `
                <div class="border-2 border-gray-600 mt-3 rounded-md p-4 relative bg-white shadow-md">
                    <p class="mb-4 text-gray-800">${quote.quote}</p>
                  <div class="absolute bottom-2 right-3 bg-blue-600 text-white px-2 py-1 rounded-md">
                    - ${quote.author}
                  </div>
                </div>
              `;
              quoteList.appendChild(quoteElement);
            });
          } else {
            quoteList.innerHTML = "<p>No quotes found.</p>";
          }
        })
        .catch((error) => {
          console.error("Error fetching quotes:", error);
        });
    }
  </script>
</body>

</html>