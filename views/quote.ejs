<!-- views/quotes.ejs -->
<style>
  #body {
    height: calc(100vh - 4rem); /* Adjust based on your header and padding needs */
    /* overflow-y: auto; */
  }
</style>

<div id="body" class="container mx-auto p-4 h-[calc(100vh-4rem)] overflow-y-auto">
  <div class="flex justify-between items-center mb-4">
    <h1 class="text-2xl font-bold">Quotes</h1>
    <% if (user) { %>
      <a href="#" hx-get="/addquote" hx-target="#body" class="bg-orange-600 text-white px-4 py-2 rounded-md hover:bg-orange-700">
        Add Quote
      </a>
  
  </div>
   
  <div class="quote-form mx-auto mt-8 p-4 max-w-6xl bg-white rounded-lg shadow-lg">
    <div class="filter-section flex mb-4 items-center space-x-2">
      <select id="filterType" class="pl-3 pr-4 py-2 border border-gray-300 rounded-lg bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500">
        <option value="">Select Filter Type</option>
        <option value="author">Author</option>
        <option value="quote">Quote</option>
        <option value="tags">Tags</option>
      </select>
      <div class="relative flex-1">
        <input type="text" id="searchBar" placeholder="Search..." class="w-full pl-4 pr-12 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
        <button id="searchButton" class="absolute inset-y-0 right-0 flex items-center justify-center w-12 h-12 bg-orange-500 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-600">
          <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35m0 0A7.5 7.5 0 1116.65 4.35a7.5 7.5 0 010 12.3z" />
          </svg>
        </button>
      </div>
      <% } %>
    </div>
 
    <!-- Quotes Section -->
    <div id="quotes-section" class="space-y-4">
      <% quotes.forEach(quote => { %>
        <div class="quote-item" data-author="<%= quote.author %>" data-text="<%= quote.text %>" data-tags="<%= quote.tags %>">
          <%- include('partials/quote', { quote, likedislikecount:likedislikecount }) %>
        </div>
      <% }); %>
      <p id="no-results" style="display: none;">No results found.</p>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const filterType = document.getElementById('filterType');
      const searchBar = document.getElementById('searchBar');
      const searchButton = document.getElementById('searchButton');
      const quotesSection = document.getElementById('quotes-section');
      const noResults = document.getElementById('no-results');

      function filterQuotes() {
        const filter = filterType.value;
        const query = searchBar.value.toLowerCase();

        // Fetch all quotes
        const quotes = Array.from(quotesSection.querySelectorAll('.quote-item'));

        let hasVisibleQuotes = false;

        quotes.forEach(quote => {
          const author = quote.dataset.author.toLowerCase();
          const text = quote.dataset.text.toLowerCase();
          const tags = quote.dataset.tags.toLowerCase();

          let shouldDisplay = false;

          switch (filter) {
            case 'author':
              shouldDisplay = author.includes(query);
              break;
            case 'quote':
              shouldDisplay = text.includes(query);
              break;
            case 'tags':
              shouldDisplay = tags.includes(query);
              break;
            default:
              shouldDisplay = true;
              break;
          }

          quote.style.display = shouldDisplay ? 'block' : 'none';
          if (shouldDisplay) hasVisibleQuotes = true;
        });

        noResults.style.display = hasVisibleQuotes ? 'none' : 'block';
      }

      searchButton.addEventListener('click', filterQuotes);
      searchBar.addEventListener('input', filterQuotes);
      filterType.addEventListener('change', filterQuotes);
    });
  </script>
</div>
